// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { GetPetsData, GetPetsResponse, GetPetsError, GetPetByIdData, GetPetByIdResponse, GetPetByIdError } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Get all pets
 */
export const getPets = <ThrowOnError extends boolean = false>(options?: Options<GetPetsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetPetsResponse, GetPetsError, ThrowOnError>({
        url: '/pets',
        ...options
    });
};

/**
 * Get a pet by ID
 */
export const getPetById = <ThrowOnError extends boolean = false>(options: Options<GetPetByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetPetByIdResponse, GetPetByIdError, ThrowOnError>({
        url: '/pets/{petId}',
        ...options
    });
};