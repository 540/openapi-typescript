// This file is auto-generated by @hey-api/openapi-ts

import { createOpenApiHttp as baseCreateOpenApiHttp } from "openapi-msw";

export const createOpenApiHttp: typeof baseCreateOpenApiHttp<paths> = baseCreateOpenApiHttp;

export interface paths {
    "/pets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all pets */
        get: operations["getPets"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pets/{petId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a pet by ID */
        get: operations["getPetById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}

export type webhooks = Record<string, never>;

export interface components {
    schemas: {
        Pet: {
            /**
             * Format: int64
             * @example 1
             */
            id: number;
            /** @example Fluffy */
            name: string;
            /** @example dog */
            tag?: string;
        };
        ErrorResponse: {
            /** @example Not Found */
            error: string;
        };
        ValidationError: {
            /** @example Validation failed */
            error: string;
        };
        NotFoundError: {
            /** @example Resource not found */
            error: string;
        };
        UnauthorizedError: {
            /** @example Unauthorized */
            error: string;
        };
        ForbiddenError: {
            /** @example Forbidden */
            error: string;
        };
        InternalServerError: {
            /** @example Internal server error */
            error: string;
        };
        ServiceUnavailableError: {
            /** @example Service unavailable */
            error: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}

export type $defs = Record<string, never>;

export interface operations {
    getPets: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description A list of pets */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Pet"][];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Internal server error */
                        error?: string;
                    };
                };
            };
        };
    };
    getPetById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The ID of the pet to retrieve */
                petId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description A single pet */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Pet"];
                };
            };
            /** @description Pet not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InternalServerError"];
                };
            };
        };
    };
}