// This file is auto-generated by @hey-api/openapi-ts

import { type Options, getPets, getPetById } from '../sdk.gen.js';
import { queryOptions } from '@tanstack/react-query';
import type { GetPetsData, GetPetByIdData } from '../types.gen.js';
import { client as _heyApiClient } from '../client.gen.js';

export type QueryKey<TOptions extends Options> = [
    Pick<TOptions, 'baseUrl' | 'body' | 'headers' | 'path' | 'query'> & {
        _id: string;
        _infinite?: boolean;
    }
];

const createQueryKey = <TOptions extends Options>(id: string, options?: TOptions, infinite?: boolean): [
    QueryKey<TOptions>[0]
] => {
    const params: QueryKey<TOptions>[0] = { _id: id, baseUrl: (options?.client ?? _heyApiClient).getConfig().baseUrl } as QueryKey<TOptions>[0];
    if (infinite) {
        params._infinite = infinite;
    }
    if (options?.body) {
        params.body = options.body;
    }
    if (options?.headers) {
        params.headers = options.headers;
    }
    if (options?.path) {
        params.path = options.path;
    }
    if (options?.query) {
        params.query = options.query;
    }
    return [
        params
    ];
};

export const getPetsQueryKey = (options?: Options<GetPetsData>) => createQueryKey('getPets', options);

export const getPetsOptions = (options?: Options<GetPetsData>) => {
    return queryOptions({
        queryFn: async ({ queryKey, signal }) => {
            const { data } = await getPets({
                ...options,
                ...queryKey[0],
                signal,
                throwOnError: true
            });
            return data;
        },
        queryKey: getPetsQueryKey(options)
    });
};

export const getPetByIdQueryKey = (options: Options<GetPetByIdData>) => createQueryKey('getPetById', options);

export const getPetByIdOptions = (options: Options<GetPetByIdData>) => {
    return queryOptions({
        queryFn: async ({ queryKey, signal }) => {
            const { data } = await getPetById({
                ...options,
                ...queryKey[0],
                signal,
                throwOnError: true
            });
            return data;
        },
        queryKey: getPetByIdQueryKey(options)
    });
};